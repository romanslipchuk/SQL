with subq1 as (SELECT order_id
               FROM   user_actions
               WHERE  action = 'cancel_order'), subq2 as (SELECT order_id,
                                                  sum(price) as order_price
                                           FROM   (SELECT order_id,
                                                          product_ids,
                                                          unnest(product_ids) as product_id
                                                   FROM   orders) t1
                                               LEFT JOIN products using(product_id)
                                           GROUP BY order_id)
SELECT user_id,
       count(order_id) as orders_count,
       round(avg(array_length(product_ids, 1)), 2) as avg_order_size,
       sum(order_price) as sum_order_value,
       round(avg(order_price), 2) as avg_order_value,
       min(order_price) as min_order_value,
       max(order_price) as max_order_value
FROM   user_actions
    LEFT JOIN (orders
    LEFT JOIN (SELECT *
               FROM   subq2) t3 using(order_id)) t2 using(order_id)
WHERE  order_id not in (SELECT *
                        FROM   subq1)
GROUP BY user_id
ORDER BY user_id limit 1000